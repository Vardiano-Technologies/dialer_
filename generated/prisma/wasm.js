
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.LeadScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  firstName: 'firstName',
  lastName: 'lastName',
  phoneE164: 'phoneE164',
  email: 'email',
  state: 'state',
  timezone: 'timezone',
  consentText: 'consentText',
  consentTimestamp: 'consentTimestamp',
  consentIp: 'consentIp',
  consentPageUrl: 'consentPageUrl',
  trustedFormToken: 'trustedFormToken',
  expressWrittenConsent: 'expressWrittenConsent',
  lastAttemptAt: 'lastAttemptAt',
  status: 'status',
  attempts: 'attempts',
  notes: 'notes'
};

exports.Prisma.CallScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  leadId: 'leadId',
  providerCallSid: 'providerCallSid',
  transcript: 'transcript',
  sentiment: 'sentiment',
  intent: 'intent',
  outcome: 'outcome',
  transferred: 'transferred'
};

exports.Prisma.SuppressionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  phoneE164: 'phoneE164',
  reason: 'reason'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.LeadStatus = exports.$Enums.LeadStatus = {
  Pending: 'Pending',
  Dnc: 'Dnc',
  Suppressed: 'Suppressed',
  Scheduled: 'Scheduled',
  Completed: 'Completed',
  Failed: 'Failed'
};

exports.CallOutcome = exports.$Enums.CallOutcome = {
  NoAnswer: 'NoAnswer',
  Declined: 'Declined',
  Interested: 'Interested',
  Transferred: 'Transferred',
  OptOut: 'OptOut',
  Error: 'Error'
};

exports.Prisma.ModelName = {
  Lead: 'Lead',
  Call: 'Call',
  Suppression: 'Suppression'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\TANYA BHARARA\\Downloads\\ai-dialer-compliant (3) (1)\\ai-dialer-compliant\\ai-dialer-compliant\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\TANYA BHARARA\\Downloads\\ai-dialer-compliant (3) (1)\\ai-dialer-compliant\\ai-dialer-compliant\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Lead {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  firstName String\n  lastName  String\n  phoneE164 String  @unique\n  email     String?\n  state     String?\n  timezone  String? // IANA tz e.g., America/New_York\n\n  // Consent artifacts (required for dialing with AI)\n  consentText           String\n  consentTimestamp      DateTime\n  consentIp             String?\n  consentPageUrl        String?\n  trustedFormToken      String?  @unique\n  expressWrittenConsent Boolean  @default(false)\n\n  // Lifecycle\n  lastAttemptAt DateTime?\n  status        LeadStatus @default(Pending)\n  attempts      Int        @default(0)\n  notes         String?\n\n  calls Call[]\n}\n\nmodel Call {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  lead   Lead   @relation(fields: [leadId], references: [id])\n  leadId String\n\n  providerCallSid String?     @unique\n  transcript      String?\n  sentiment       Float?\n  intent          String?\n  outcome         CallOutcome @default(NoAnswer)\n  transferred     Boolean     @default(false)\n}\n\nmodel Suppression {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  phoneE164 String   @unique\n  reason    String?\n}\n\nenum LeadStatus {\n  Pending\n  Dnc\n  Suppressed\n  Scheduled\n  Completed\n  Failed\n}\n\nenum CallOutcome {\n  NoAnswer\n  Declined\n  Interested\n  Transferred\n  OptOut\n  Error\n}\n",
  "inlineSchemaHash": "17ef3cec7ef30433669c0d66d5c6879984a70dbbbad1da81f1f6b1a6ed533a54",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Lead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneE164\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consentText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consentTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"consentIp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consentPageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trustedFormToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expressWrittenConsent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastAttemptAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"LeadStatus\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"calls\",\"kind\":\"object\",\"type\":\"Call\",\"relationName\":\"CallToLead\"}],\"dbName\":null},\"Call\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"CallToLead\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerCallSid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transcript\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentiment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"intent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outcome\",\"kind\":\"enum\",\"type\":\"CallOutcome\"},{\"name\":\"transferred\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Suppression\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phoneE164\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

